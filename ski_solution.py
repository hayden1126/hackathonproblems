def ski_run_difficulty(topography):
    # Calculate steepness between adjacent points
    steepness = [abs(topography[i] - topography[i+1]) for i in range(len(topography)-1)]
    
    # Initialize variables to track the highest average steepness and its trough count
    max_avg_steepness = 0
    max_trough_count = 0

    # Iterate through the array to find the segment with the highest average steepness
    for i in range(len(steepness) - 48):  # Ensure the segment is 50 meters long
        segment = steepness[i:i+49]
        avg_steepness = sum(segment) / 49  # Average steepness of the segment
        trough_count = 0
        
        # Count troughs in the current segment
        for j in range(1, 49):  # Compare each point with its neighbors within the segment
            if topography[i+j] < topography[i+j-1] and topography[i+j] < topography[i+j+1]:
                trough_count += 1
        
        # Update max average steepness and trough count if the current segment is steeper
        if avg_steepness > max_avg_steepness:
            max_avg_steepness = avg_steepness
            max_trough_count = trough_count
        elif avg_steepness == max_avg_steepness:  # If equal, consider the one with more troughs
            max_trough_count = max(max_trough_count, trough_count)
    
    # Calculate difficulty rating
    difficulty_rating = max_avg_steepness * max_trough_count
    
    # Return difficulty rating rounded to three decimal places
    return round(difficulty_rating, 2)

topography = [3017, 3010, 3005, 3002, 2995, 2989, 2982, 2989, 2986, 2986, 2979, 2976, 2972, 2969, 2969, 2964, 2959, 2964, 2960, 2959, 2954, 2947, 2942, 2940, 2934, 2932, 2926, 2925, 2922, 2915, 2913, 2906, 2912, 2893, 2888, 2888, 2881, 2874, 2869, 2865, 2860, 2858, 2861, 2841, 2841, 2823, 2825, 2831, 2824, 2829, 2827, 2830, 2832, 2838, 2833, 2830, 2826, 2824, 2817, 2810, 2817, 2816, 2813, 2813, 2810, 2799, 2804, 2798, 2794, 2785, 2780, 2775, 2773, 2768, 2749, 2743, 2743, 2737, 2732, 2748, 2744, 2740, 2747, 2744, 2742, 2737, 2736, 2722, 2727, 2722, 2702, 2700, 2705, 2708, 2708, 2703, 2708, 2711, 2705, 2705, 2704, 2704, 2697, 2691, 2686, 2691, 2691, 2691, 2694, 2689, 2684, 2699, 2693, 2688, 2682, 2675, 2673, 2668, 2668, 2671, 2665, 2669, 2669, 2662, 2653, 2642, 2641, 2634, 2629, 2613, 2618, 2612, 2606, 2601, 2606, 2603, 2603, 2598, 2591, 2587, 2591, 2588, 2585, 2580, 2575, 2580, 2570, 2566, 2561, 2554, 2549, 2555, 2549, 2544, 2534, 2529, 2524, 2520, 2523, 2525, 2521, 2516, 2509, 2515, 2510, 2505, 2503, 2498, 2493, 2491, 2476, 2471, 2468, 2466, 2466, 2461, 2456, 2451, 2448, 2447, 2455, 2450, 2435, 2423, 2418, 2414, 2428, 2422, 2430, 2431, 2436, 2436, 2431, 2425, 2424, 2423, 2420, 2414, 2394, 2387, 2387, 2371, 2364, 2361, 2361, 2362, 2359, 2353, 2345, 2342, 2340, 2344, 2357, 2360, 2353, 2340, 2321, 2314, 2307, 2300, 2300, 2288, 2288, 2287, 2269, 2264, 2259, 2255, 2251, 2245, 2241, 2234, 2227, 2227, 2227, 2234, 2230, 2214, 2213, 2197, 2179, 2165, 2159, 2154, 2153, 2146, 2141, 2134, 2132, 2131, 2126, 2132, 2113, 2113, 2108, 2103, 2091, 2084, 2086, 2075, 2069, 2069, 2066, 2066, 2073, 2072, 2067, 2071, 2066, 2063, 2056, 2051, 2051, 2049, 2044, 2024, 2008, 2003, 2000, 2006, 2006, 2006, 2002, 1983, 1980, 1997, 1992, 1989, 1983, 1983, 1982, 1987, 1980, 1974, 1964, 1961, 1956, 1952, 1932, 1934, 1933, 1931, 1926, 1923, 1918, 1916, 1912, 1908, 1893, 1896, 1903, 1901, 1900, 1907, 1907, 1903, 1896, 1890, 1885, 1884, 1887, 1886, 1897, 1897, 1891, 1884, 1878, 1869, 1857, 1867, 1860, 1856, 1863, 1861, 1854, 1854, 1834, 1829, 1826, 1818, 1820, 1807, 1793, 1781, 1774, 1772, 1774, 1771, 1770, 1770, 1769, 1783, 1783, 1786, 1785, 1787, 1789, 1784, 1789, 1800, 1799, 1784, 1788, 1788, 1783, 1778, 1773, 1770, 1765, 1760, 1755, 1744, 1739, 1743, 1739, 1738, 1733, 1730, 1720, 1715, 1709, 1712, 1711, 1707, 1702, 1695, 1692, 1687, 1692, 1679, 1686, 1682, 1680, 1675, 1669, 1660, 1663, 1668, 1663, 1656, 1649, 1646, 1647, 1646, 1645, 1644, 1644, 1640, 1626, 1631, 1630, 1623, 1618, 1601, 1601, 1598, 1596, 1591, 1586, 1575, 1572, 1565, 1565, 1570, 1567, 1570, 1564, 1559, 1556, 1556, 1559, 1558, 1553, 1543, 1541, 1546, 1543, 1538, 1535, 1531, 1511, 1508, 1509, 1513, 1511, 1498, 1498, 1497, 1487, 1482, 1484, 1487, 1487, 1485, 1483, 1482, 1477, 1478, 1458, 1454, 1448, 1448, 1467, 1470, 1469, 1450, 1449, 1444, 1445, 1440, 1440, 1435, 1430, 1429, 1427, 1422, 1416, 1411, 1407, 1401, 1394, 1394, 1394, 1375, 1369, 1353, 1357, 1353, 1357, 1347, 1342, 1346, 1346, 1348, 1350, 1349, 1349, 1346, 1339, 1333, 1313, 1303, 1303, 1304, 1306, 1305, 1299, 1291, 1289, 1278, 1298, 1302, 1301, 1300, 1300, 1295, 1295, 1295, 1294, 1278, 1273, 1268, 1261, 1254, 1249, 1230, 1223, 1220, 1215, 1212, 1208, 1205, 1202, 1200, 1196, 1196, 1195, 1200, 1199, 1192, 1190, 1196, 1191, 1189, 1184, 1181, 1179, 1178, 1177, 1172, 1155, 1136, 1142, 1123, 1121, 1116, 1115, 1109, 1105, 1094, 1089, 1103, 1102, 1105, 1100, 1093, 1077, 1083, 1081, 1081, 1101, 1102, 1108, 1094, 1094, 1099, 1101, 1095, 1078, 1075, 1070, 1068, 1062, 1055, 1074, 1056, 1042, 1047, 1044, 1044, 1041, 1036, 1039, 1046, 1041, 1036, 1040, 1047, 1047, 1043, 1024] 

print(ski_run_difficulty(topography))